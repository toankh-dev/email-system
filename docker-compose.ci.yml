# CI/CD Docker Compose - For staging/testing with auto-reload
services:
  email-system-ci:
    # Use pre-built image from registry (don't build in CI/CD server)
    image: ${DOCKER_IMAGE:-email-system}:${CI_COMMIT_SHA:-latest}
    container_name: email-system-ci
    restart: unless-stopped
    ports:
      - '127.0.0.1:${HOST_PORT:-3000}:3000' # Bind to localhost only
    environment:
      # Node.js Environment
      - NODE_ENV=${NODE_ENV:-staging}
      - PORT=3000

      # CI/CD specific
      - CI=true
      - CI_COMMIT_SHA=${CI_COMMIT_SHA:-unknown}
      - CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH:-unknown}
      - BUILD_TIME=${BUILD_TIME:-unknown}

      # Security & Performance
      - NEXT_TELEMETRY_DISABLED=1

      # Node.js Optimization
      - NODE_OPTIONS=--max-old-space-size=2048 --max-http-header-size=16384 --dns-result-order=ipv4first

      # Timezone
      - TZ=UTC

    # Load secrets from environment-specific file
    # This file should be created on the server, NOT in git
    secrets:
      - source: app_env
        target: /run/secrets/app_env

    healthcheck:
      test:
        ['CMD', 'node', '-e', "require('http').get('http://localhost:3000/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    networks:
      - email-system-network

    # Security options
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,nodev,size=100m
      - /var/tmp:noexec,nosuid,nodev,size=50m

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
          pids: 200
        reservations:
          cpus: '0.5'
          memory: 512M

    # Logging with compression
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '5'
        compress: 'true'
        labels: '${NODE_ENV:-staging},email-system'

    # Labels for CI/CD tracking
    labels:
      - 'com.email-system.version=${CI_COMMIT_SHA:-latest}'
      - 'com.email-system.branch=${CI_COMMIT_BRANCH:-unknown}'
      - 'com.email-system.environment=${NODE_ENV:-staging}'
      - 'com.email-system.build-time=${BUILD_TIME:-unknown}'

# Secrets should be created on the deployment server
# Create with: echo "ENV_CONTENT" | docker secret create app_env -
secrets:
  app_env:
    external: true

networks:
  email-system-network:
    driver: bridge
