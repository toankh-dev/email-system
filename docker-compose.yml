services:
  email-system:
    build:
      context: .
      dockerfile: Dockerfile
      secrets:
        - env
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: ${DOCKER_IMAGE:-email-system}:${IMAGE_TAG:-latest}
    container_name: email-system
    restart: unless-stopped
    ports:
      - '127.0.0.1:${HOST_PORT:-3000}:3000' # Bind to localhost only for security
    environment:
      # Node.js Environment
      - NODE_ENV=production
      - PORT=3000

      # Security & Performance
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_DISABLE_SOURCE_MAPS=true

      # Node.js Optimization
      - NODE_OPTIONS=--max-old-space-size=2048 --max-http-header-size=16384 --dns-result-order=ipv4first

      # Timezone
      - TZ=UTC

      # Process monitoring
      - npm_package_name=email-system

    # Load env vars from Docker secrets (more secure than env_file for production)
    # Note: Secrets are mounted as files in /run/secrets/
    # Access via: process.env or read from /run/secrets/app_env

    healthcheck:
      test:
        ['CMD', 'node', '-e', "require('http').get('http://localhost:3000/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - email-system-network
    # Security options
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE # Only if binding to port < 1024
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,nodev,size=100m
      - /var/tmp:noexec,nosuid,nodev,size=50m

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
          pids: 200 # Limit number of processes (prevent fork bombs)
        reservations:
          cpus: '0.5'
          memory: 512M

    # Logging with compression
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '5'
        compress: 'true'
        labels: 'production,email-system'

    # Labels for monitoring
    labels:
      - 'com.email-system.environment=production'
      - 'com.email-system.version=${IMAGE_TAG:-latest}'

secrets:
  env:
    file: .env.production

networks:
  email-system-network:
    driver: bridge
