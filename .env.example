# ===========================================
# ENVIRONMENT VARIABLES
# ===========================================
# Copy this file to .env.local and fill in your values
# For production/staging: Create .env.production or .env.staging on server
#
# Note: Developers can add/remove/modify variables as needed

# =============================================================================
# NEXT.JS & APPLICATION ENVIRONMENT
# =============================================================================
# NODE_ENV will be set automatically by Next.js (development, production, test)
NODE_ENV=development

# APP_ENV defines the deployment environment (development, staging, production)
# This is used for environment-specific configurations beyond NODE_ENV
APP_ENV=development

# Application port (default: 3000)
PORT=3000

# =============================================================================
# PUBLIC VARIABLES (Exposed to Browser - prefix with NEXT_PUBLIC_)
# =============================================================================
# ⚠️ Warning: These variables are embedded in the client bundle and visible to users
# Never put sensitive data here!

# Backend API URL (OPTIONAL - only for Hybrid Approach to reduce latency)
# Leave commented for pure proxy architecture (more secure, slightly slower)
# Uncomment ONLY if using direct client→backend calls for public endpoints
# See docs/LATENCY_OPTIMIZATION.md for hybrid architecture details
# NEXT_PUBLIC_API_URL=http://localhost:8000

# Feature Flags
NEXT_PUBLIC_ENABLE_ANALYTICS=false
NEXT_PUBLIC_ENABLE_NEW_DASHBOARD=false
NEXT_PUBLIC_ENABLE_EXPERIMENTAL_FEATURES=false

# =============================================================================
# SERVER-SIDE ONLY VARIABLES (NOT exposed to browser)
# =============================================================================
# ✅ Safe for sensitive data - only accessible in server-side code

# Backend API URL for Next.js API routes to proxy requests
# This is used by Next.js server-side code to communicate with backend
# Client never sees this URL - all requests go through Next.js API routes
BACKEND_URL=http://localhost:8000

# =============================================================================
# SECURITY & AUTHENTICATION
# =============================================================================
# Note: Using PROXY architecture
# Browser → Next.js API Routes → Backend API
# All requests are same-origin (no CORS needed for client)

# Authentication flow:
# 1. Client calls /api/auth/login (Next.js API route)
# 2. Next.js proxies to backend via BACKEND_URL
# 3. Backend returns JWT token
# 4. Next.js stores token in httpOnly cookie
# 5. Cookie automatically included in subsequent requests

# ✅ NO CORS CONFIGURATION NEEDED because:
# - Client makes same-origin requests to Next.js (localhost:3000 → localhost:3000)
# - Next.js makes server-to-server requests to backend (no CORS involved)
# - Backend can be completely private (no public access needed)

# Optional: JWT secret - only if you want to verify tokens in Next.js middleware
# Must match the secret used by your backend
# JWT_SECRET=your-jwt-secret-must-match-backend

# Optional: NextAuth.js (only if using OAuth providers like Google, GitHub)
# NEXTAUTH_SECRET=your-nextauth-secret-here
# NEXTAUTH_URL=http://localhost:3000

# =============================================================================
# STORAGE & CDN
# =============================================================================

# AWS S3 (for file uploads)
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=email-system-uploads

# Cloudinary (alternative)
# CLOUDINARY_CLOUD_NAME=
# CLOUDINARY_API_KEY=
# CLOUDINARY_API_SECRET=

# =============================================================================
# EXTERNAL APIS & SERVICES
# =============================================================================

# Google APIs
# GOOGLE_CLIENT_ID=
# GOOGLE_CLIENT_SECRET=
# GOOGLE_API_KEY=

# OAuth Providers
# GITHUB_CLIENT_ID=
# GITHUB_CLIENT_SECRET=

# Payment Gateway
# STRIPE_SECRET_KEY=
# STRIPE_PUBLISHABLE_KEY=
# STRIPE_WEBHOOK_SECRET=

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================

# Sentry for error tracking
# SENTRY_DSN=https://xxxxx@sentry.io/xxxxx
# SENTRY_AUTH_TOKEN=
# SENTRY_ORG=
# SENTRY_PROJECT=

# Google Analytics
# NEXT_PUBLIC_GA_MEASUREMENT_ID=G-XXXXXXXXXX

# Vercel Analytics
# NEXT_PUBLIC_VERCEL_ANALYTICS_ID=

# =============================================================================
# LOGGING & DEBUGGING
# =============================================================================

# Log level: error, warn, info, debug
LOG_LEVEL=info

# Enable debug mode
DEBUG=false

# =============================================================================
# PERFORMANCE & OPTIMIZATION
# =============================================================================

# API Rate Limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=900000

# Cache TTL (in seconds)
CACHE_TTL=3600

# =============================================================================
# NEXT.JS SPECIFIC
# =============================================================================

# Disable Next.js telemetry
NEXT_TELEMETRY_DISABLED=1

# Enable/disable source maps in production
NEXT_DISABLE_SOURCEMAPS=false

# Analyze bundle size
ANALYZE=false

# =============================================================================
# DEVELOPMENT ONLY
# =============================================================================

# Skip type checking during build (NOT recommended for production)
# SKIP_TYPE_CHECK=false

# Skip linting during build
# SKIP_LINT=false

# =============================================================================
# FEATURE FLAGS
# =============================================================================

ENABLE_REGISTRATION=true
ENABLE_EMAIL_VERIFICATION=false
MAINTENANCE_MODE=false

# =============================================================================
# USAGE
# =============================================================================
# Local Development:  Copy to .env.local
# Staging:            Copy to .env.staging on staging server
# Production:         Copy to .env.production on production server
#
# Quick setup:
#   cp .env.example .env.local
#   # Then edit .env.local with your values
#
# Generate secrets:
#   openssl rand -base64 32
